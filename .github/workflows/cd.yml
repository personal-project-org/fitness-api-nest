name: cd

on:
  push:
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  cd:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - 5555:5432
        env:
          POSTGRES_PASSWORD: ${{ secrets.CI_POSTGRES_PASSWORD }}
          POSTGRES_DB: fitness-api-db
    env:
      NODE_ENV: 'development'

    steps:
      - name: Checkout üõé
        uses: actions/checkout@master

      - name: Setup node env üèó
        uses: actions/setup-node@v2.1.2
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node_modules üì¶
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Installing NPM
        run: npm install --legacy-peer-deps

      - name: Unit and E2E Tests
        run: npm run test:pipeline

      - name: Linting check
        run: npm run lint

      - name: Building application
        run: npm run build

      - name: Send GitHub Action trigger data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          payload: |
            {
              "author":  "${{ github.event.pusher.name }}",
              "commitHash": "${{ github.sha }}",
              "env": "${{env.GITHUB_ENV}}",
              "linkToBuild": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "linkToCommit": "${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "status": "${{ job.status == 'success' && '‚úÖ Success' || '‚ùå Failure'}}"
            }
